# Application Configuration
spring.application.name=FileUpload

# DataSource configuration for PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/user_info
spring.datasource.username=postgres
spring.datasource.password=postgres

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Important for PostgreSQL - this enables proper case handling in table names
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Datasource Connection Pool
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.resolve-lazily=true

# CORS Configuration
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.max-age=3600

# Jackson Configuration for JSON serialization
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.time-zone=UTC
spring.jackson.date-format=yyyy-MM-dd
spring.jackson.serialization.write-dates-as-timestamps=false

# Swagger UI configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.packagesToScan=com.example.dynamiccv.DynamicCVBackedJava.controller
springdoc.pathsToMatch=/api/**

# Gradle Configuration
org.gradle.internal.http.connectionTimeout=180000
org.gradle.internal.http.socketTimeout=180000
org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError

# ========================
# JWT AUTHENTICATION CONFIGURATION (NEW)
# ========================

# JWT Configuration
# Generate a strong secret key - you can use: echo 'your-secret-string' | base64
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970337336763979244226452948404D635166546A576E5A7234753778214125442A
jwt.expiration=86400000
# JWT expiration time in milliseconds (86400000 = 24 hours)
jwt.refreshExpirationMs=604800000
# Refresh token expiration (604800000 = 7 days)

# Email Configuration for Password Reset
# For Gmail SMTP (you'll need to enable 2FA and generate app password)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-app-specific-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Alternative email configurations (uncomment as needed):

# For Outlook/Hotmail
#spring.mail.host=smtp-mail.outlook.com
#spring.mail.port=587
#spring.mail.username=your-email@outlook.com
#spring.mail.password=your-password

# For Yahoo
#spring.mail.host=smtp.mail.yahoo.com
#spring.mail.port=587
#spring.mail.username=your-email@yahoo.com
#spring.mail.password=your-password

# For custom SMTP server
#spring.mail.host=your-smtp-server.com
#spring.mail.port=587
#spring.mail.username=your-username
#spring.mail.password=your-password

# Email template configuration
spring.mail.default-encoding=UTF-8
spring.mail.test-connection=false

# Security Configuration
# Password reset token expiration (in hours)
app.password-reset-token.expiration-hours=24

# Application URLs (adjust according to your frontend)
app.frontend.url=http://localhost:3000
app.backend.url=http://localhost:8080

# Session management
spring.session.store-type=none
server.servlet.session.persistent=false

# Logging Configuration
logging.level.root=INFO
logging.level.com.example=DEBUG
logging.level.com.example.dynamiccv=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.mail=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Spring Boot Actuator (uncomment if needed)
#management.endpoints.web.exposure.include=health,info,metrics
#management.endpoint.health.show-details=always

# API Documentation
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-request-duration=true

# Additional Security Headers
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false
